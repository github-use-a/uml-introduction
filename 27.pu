//多重度
' @startuml
' left to right direction
' class 会社 {}
' class 社員 {}
' ' 会社 --> 社員:雇う
' note top  of 会社:雇用者
' note top of 社員:従業員

' @enduml

//集約
' @startuml
'     left to right direction
'     会員リスト o-- 会員
'     note right of 会員リスト
'     会員クラスがなくて成り立つ
'     end note
' @enduml

//複合
' @startuml
' left to right direction
' パソコン"1" *-- ハードディスク
' note right of パソコン
' ハードディスクがないと成り立ちません。
' end note
' @enduml

//継承
' @startuml
' class 社員{
' - 社員ID
' - 社員名
' ---
' + 社員ID設定（社員ID:int）:void
' + 社員ID取得（）:int
' + 社員名設定（社員名:String）:void
' + 社員名取得（）:String
' }
' class 技術社員{
' - プロジェクト名:String
' ---
' + プロジェクト名設定（プロジェクト名:String）:void
' + プロジェクト名取得（）:String
' }
' class 営業社員{
' - 担当地域名:String
' ---
' + 担当地域名設定（プロジェクト名:String）:void
' + 担当地域名取得（）:String
' }
' ' 社員<|--down- 技術社員
' ' 社員<|--down- 営業社員

' 技術社員 --right|> 社員
' 営業社員 --right|> 社員

' @endum

//抽象クラス
' @startuml
' class Animal {
' ---
' + Walk:void
' + {abstract} eat():int
' + {abstract} cry():void
' }
' class Dog {
' ---
' + eat():int
' + cry():void
' }
' class Cat {
' ---
' + eat():int
' + cry():void
' }
' Animal <|-down- Dog
' Animal <|-down- Cat
' @enduml

//インターフェース
' @startuml
' class Word {
' ---
' + enter():void
' }
' class Excel {
' ---
' + enter():void
' }
' interface keyboard {
' ' <<interface>>
' ---
' + enter():void
' }
' keyboard <|.. Word
' keyboard <|.. Excel
' class User {
' }
' keyboard <-up- User:<< use >>
' @enduml

//ロリポップ
' @startuml
' class Word {
' ---
' + enter():void
' }
' class Excel {
' ---
' + enter():void
' }
' circle "keyboard" as I1
' Word --( I1
' Excel --(
' class User {
' }
' I1 <-- User:<< use >>
' @enduml

//オブジェクト図(多重度は記載×)
' @startuml
' left to right direction
' object "<u>空車リスト2: 空車リスト</u>" as k2 {
' 日付
' }
' object "<u>空車リスト1: 空車リスト</u>" as k1 {
' 日付
' }
' object "<u>車情報1: 車</u>" as car1 {
' 管理番号=5
' 車種
' 貸出料金
' }
' object "<u>車情報2: 車</u>" as car2 {
' 管理番号=6
' 車種
' 貸出料金
' }
' k1 -- car1
' k1 -- car2
' k2 -- car1
' @enduml

//貸出管理システムのクラス図
@startuml
' left to right direction
class "空車リスト" as empty_car {
- 日付: Date
}
class "車" as car {
- 管理番号:int
- 車種:String
- 貸出料金:int
}
class "貸出" as rental {
- 貸出番号:int
}
class "顧客" as customer {
- 名前: String
- 電話番号:String
- 郵便番号:String
- 住所:String
}
class "予約" as reserve {
- 予約番号: int
- 予約日:Date
}
empty_car "1" o-ri- "*" rental
empty_car "*" o-down- "*" car
rental "0..1" -down- "0..1" reserve
car "1" -ri- "*" reserve
rental "1" -ri- "1" customer
reserve "1" -up- "1" customer
@enduml
